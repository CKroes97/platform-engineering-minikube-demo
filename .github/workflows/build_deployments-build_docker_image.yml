name: Build docker image

permissions:
  contents: write
  pull-requests: write

on:
  workflow_call:

jobs: 
  build-image:
    runs-on: self-hosted
    steps:
      - name: force clean Repository
        run: sudo rm -rf ${{ github.workspace }}/terraform

      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        run: sudo dnf install python3 python3-pip -y

      - name: Install requirements
        run: pip install -r workflow_scripts/build_docker_image/requirements.txt

      - name: Get Minikube IP
        id: minikube-ip
        run: |
          MINIKUBE_IP=$(minikube ip)
          echo "MINIKUBE_IP=$MINIKUBE_IP" >> $GITHUB_ENV
          echo "Detected Minikube IP: $MINIKUBE_IP"

      - name: Configure Docker insecure registry
        run: |
          REGISTRY_ADDR="${{ env.MINIKUBE_IP }}:30080"
          echo "Adding insecure registry: $REGISTRY_ADDR"
          sudo mkdir -p /etc/docker
          sudo tee /etc/docker/daemon.json >/dev/null <<EOF
          {
            "insecure-registries": ["$REGISTRY_ADDR"]
          }
          EOF

          sudo chmod 644 /etc/docker/daemon.json

      - name: Login to docker to generate auth files
        run: |
          echo ${{ env.DOCKER_REGISTRY_PASSWORD }} | \
          docker login --username ${{ env.DOCKER_REGISTRY_USERNAME }} \
           --password-stdin  \
           "${{ env.MINIKUBE_IP }}:30080"
        env:
          DOCKER_REGISTRY_USERNAME: ${{ secrets.REGISTRY_USER }}
          DOCKER_REGISTRY_PASSWORD: ${{ secrets.REGISTRY_PASSWORD }}

      - name: Run Dockerfile build script
        run: | 
          python workflow_scripts/build_docker_image/build_docker_images.py \
           --dockerfiles-dir "generated_dockerfiles" \
           --docker-registry "${{ env.MINIKUBE_IP }}:30080"
        env:
          DOCKER_REGISTRY_USERNAME: ${{ secrets.REGISTRY_USER }}
          DOCKER_REGISTRY_PASSWORD: ${{ secrets.REGISTRY_PASSWORD }}

      - name: Create request for deployment
        run: |
          python workflow_scripts/build_docker_image/generate_requests.py \
            --env dev \
            --template-path templates/runtime-requests.yml \
            --output-dir generated_python_webservices_requests \
            --docker-registry "registry.docker-registry.svc.cluster.local:5000"

      - name: Commit and Push Changes
        id: commit_build
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git pull
          BRANCH_NAME="generate-requests-${{ github.sha }}"
          git checkout -b $BRANCH_NAME
          git add generated_dockerfiles/
          git add generated_python_webservices_requests/
          git commit -m "Auto-generate Dockerfiles for new webservices"
          git push origin $BRANCH_NAME
          echo "branch_name"="$BRANCH_NAME" >> "$GITHUB_ENV"
          sleep 3
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        continue-on-error: true

      - name: Create PR
        run: | 
          gh pr create --base ${{ github.ref_name }} --head ${{ env.branch_name }} \
           --title "Generate Dockerfiles" --body "Automated update"
          sleep 3
        env:
         GH_TOKEN: ${{ github.token }}
        if: ${{ steps.commit_build.outcome == 'success' }}

      - name: Merge PR if not redundant
        run: |
         python workflow_scripts/shared/check_if_pr_redundant.py \
         --current-branch "${{ env.branch_name}}" \
         --base-branch "${{ github.ref_name }}" \
         --repository "${{ github.repository }}" \
         --folder "generated_python_webservices_requests, generated_dockerfiles"
        env:
         GITHUB_TOKEN: ${{ github.token }}
        if: ${{ steps.commit_build.outcome == 'success' }}